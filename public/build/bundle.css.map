{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Dropzone.svelte",
    "../../Notification.svelte",
    "../../SendMessage.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { fromEvent } from \"file-selector\";\r\n  import {\r\n    allFilesAccepted,\r\n    composeEventHandlers,\r\n    fileAccepted,\r\n    fileMatchSize,\r\n    isEvtWithFiles,\r\n    isIeOrEdge,\r\n    isPropagationStopped,\r\n    onDocumentDragOver,\r\n    TOO_MANY_FILES_REJECTION\r\n  } from \"./../utils/index\";\r\n  import { onMount, onDestroy, createEventDispatcher } from \"svelte\";\r\n\r\n  //props\r\n  /**\r\n   * Set accepted file types.\r\n   * See https://github.com/okonet/attr-accept for more information.\r\n   */\r\n  export let accept; // string or string[]\r\n  export let disabled = false;\r\n  export let getFilesFromEvent = fromEvent;\r\n  export let maxSize = Infinity;\r\n  export let minSize = 0;\r\n  export let multiple = true;\r\n  export let preventDropOnDocument = true;\r\n  export let noClick = false;\r\n  export let noKeyboard = false;\r\n  export let noDrag = false;\r\n  export let noDragEventsBubbling = false;\r\n  export let containerClasses = \"\";\r\n  export let containerStyles = \"\";\r\n  export let disableDefaultStyles = false;\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  //state\r\n\r\n  let state = {\r\n    isFocused: false,\r\n    isFileDialogActive: false,\r\n    isDragActive: false,\r\n    isDragAccept: false,\r\n    isDragReject: false,\r\n    draggedFiles: [],\r\n    acceptedFiles: [],\r\n    fileRejections: []\r\n  };\r\n\r\n  let rootRef;\r\n  let inputRef;\r\n\r\n  function resetState() {\r\n    state.isFileDialogActive = false;\r\n    state.isDragActive = false;\r\n    state.draggedFiles = [];\r\n    state.acceptedFiles = [];\r\n    state.fileRejections = [];\r\n  }\r\n\r\n  // Fn for opening the file dialog programmatically\r\n  function openFileDialog() {\r\n    if (inputRef) {\r\n      inputRef.value = null; // TODO check if null needs to be set\r\n      state.isFileDialogActive = true;\r\n      inputRef.click();\r\n    }\r\n  }\r\n\r\n  // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\r\n  function onKeyDownCb(event) {\r\n    // Ignore keyboard events bubbling up the DOM tree\r\n    if (!rootRef || !rootRef.isEqualNode(event.target)) {\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 32 || event.keyCode === 13) {\r\n      event.preventDefault();\r\n      openFileDialog();\r\n    }\r\n  }\r\n\r\n  // Update focus state for the dropzone\r\n  function onFocusCb() {\r\n    state.isFocused = true;\r\n  }\r\n  function onBlurCb() {\r\n    state.isFocused = false;\r\n  }\r\n\r\n  // Cb to open the file dialog when click occurs on the dropzone\r\n  function onClickCb() {\r\n    if (noClick) {\r\n      return;\r\n    }\r\n\r\n    // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()\r\n    // to ensure React can handle state changes\r\n    // See: https://github.com/react-dropzone/react-dropzone/issues/450\r\n    if (isIeOrEdge()) {\r\n      setTimeout(openFileDialog, 0);\r\n    } else {\r\n      openFileDialog();\r\n    }\r\n  }\r\n\r\n  function onDragEnterCb(event) {\r\n    event.preventDefault();\r\n    stopPropagation(event);\r\n\r\n    dragTargetsRef = [...dragTargetsRef, event.target];\r\n\r\n    if (isEvtWithFiles(event)) {\r\n      Promise.resolve(getFilesFromEvent(event)).then(draggedFiles => {\r\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\r\n          return;\r\n        }\r\n\r\n        state.draggedFiles = draggedFiles;\r\n        state.isDragActive = true;\r\n\r\n        dispatch(\"dragenter\", {\r\n          dragEvent: event\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  function onDragOverCb(event) {\r\n    event.preventDefault();\r\n    stopPropagation(event);\r\n\r\n    if (event.dataTransfer) {\r\n      try {\r\n        event.dataTransfer.dropEffect = \"copy\";\r\n      } catch {} /* eslint-disable-line no-empty */\r\n    }\r\n\r\n    if (isEvtWithFiles(event)) {\r\n      dispatch(\"dragover\", {\r\n        dragEvent: event\r\n      });\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function onDragLeaveCb(event) {\r\n    event.preventDefault();\r\n    stopPropagation(event);\r\n\r\n    // Only deactivate once the dropzone and all children have been left\r\n    const targets = dragTargetsRef.filter(\r\n      target => rootRef && rootRef.contains(target)\r\n    );\r\n    // Make sure to remove a target present multiple times only once\r\n    // (Firefox may fire dragenter/dragleave multiple times on the same element)\r\n    const targetIdx = targets.indexOf(event.target);\r\n    if (targetIdx !== -1) {\r\n      targets.splice(targetIdx, 1);\r\n    }\r\n    dragTargetsRef = targets;\r\n    if (targets.length > 0) {\r\n      return;\r\n    }\r\n\r\n    state.isDragActive = false;\r\n    state.draggedFiles = [];\r\n\r\n    if (isEvtWithFiles(event)) {\r\n      dispatch(\"dragleave\", {\r\n        dragEvent: event\r\n      });\r\n    }\r\n  }\r\n\r\n  function onDropCb(event) {\r\n    event.preventDefault();\r\n    stopPropagation(event);\r\n\r\n    dragTargetsRef = [];\r\n\r\n    if (isEvtWithFiles(event)) {\r\n      Promise.resolve(getFilesFromEvent(event)).then(files => {\r\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\r\n          return;\r\n        }\r\n\r\n        const acceptedFiles = [];\r\n        const fileRejections = [];\r\n\r\n        files.forEach(file => {\r\n          const [accepted, acceptError] = fileAccepted(file, accept);\r\n          const [sizeMatch, sizeError] = fileMatchSize(file, minSize, maxSize);\r\n          if (accepted && sizeMatch) {\r\n            acceptedFiles.push(file);\r\n          } else {\r\n            const errors = [acceptError, sizeError].filter(e => e);\r\n            fileRejections.push({ file, errors });\r\n          }\r\n        });\r\n\r\n        if (!multiple && acceptedFiles.length > 1) {\r\n          // Reject everything and empty accepted files\r\n          acceptedFiles.forEach(file => {\r\n            fileRejections.push({ file, errors: [TOO_MANY_FILES_REJECTION] });\r\n          });\r\n          acceptedFiles.splice(0);\r\n        }\r\n\r\n        state.acceptedFiles = acceptedFiles;\r\n        state.fileRejections = fileRejections;\r\n\r\n        dispatch(\"drop\", {\r\n          acceptedFiles,\r\n          fileRejections,\r\n          event\r\n        });\r\n\r\n        if (fileRejections.length > 0) {\r\n          dispatch(\"droprejected\", {\r\n            fileRejections,\r\n            event\r\n          });\r\n        }\r\n\r\n        if (acceptedFiles.length > 0) {\r\n          dispatch(\"dropaccepted\", {\r\n            acceptedFiles,\r\n            event\r\n          });\r\n        }\r\n      });\r\n    }\r\n    resetState();\r\n  }\r\n\r\n  function composeHandler(fn) {\r\n    return disabled ? null : fn;\r\n  }\r\n\r\n  function composeKeyboardHandler(fn) {\r\n    return noKeyboard ? null : composeHandler(fn);\r\n  }\r\n\r\n  function composeDragHandler(fn) {\r\n    return noDrag ? null : composeHandler(fn);\r\n  }\r\n\r\n  function stopPropagation(event) {\r\n    if (noDragEventsBubbling) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  let dragTargetsRef = [];\r\n  function onDocumentDrop(event) {\r\n    if (rootRef && rootRef.contains(event.target)) {\r\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    dragTargetsRef = [];\r\n  }\r\n\r\n  // Update file dialog active state when the window is focused on\r\n  function onWindowFocus() {\r\n    // Execute the timeout only if the file dialog is opened in the browser\r\n    if (state.isFileDialogActive) {\r\n      setTimeout(() => {\r\n        if (inputRef) {\r\n          const { files } = inputRef;\r\n\r\n          if (!files.length) {\r\n            state.isFileDialogActive = false;\r\n            dispatch(\"filedialogcancel\");\r\n          }\r\n        }\r\n      }, 300);\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    window.addEventListener(\"focus\", onWindowFocus, false);\r\n    if (preventDropOnDocument) {\r\n      document.addEventListener(\"dragover\", onDocumentDragOver, false);\r\n      document.addEventListener(\"drop\", onDocumentDrop, false);\r\n    }\r\n  });\r\n\r\n  onDestroy(() => {\r\n    window.removeEventListener(\"focus\", onWindowFocus, false);\r\n    if (preventDropOnDocument) {\r\n      document.removeEventListener(\"dragover\", onDocumentDragOver);\r\n      document.removeEventListener(\"drop\", onDocumentDrop);\r\n    }\r\n  });\r\n\r\n  function onInputElementClick(event) {\r\n    event.stopPropagation();\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .dropzone {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px;\r\n    border-width: 2px;\r\n    border-radius: 2px;\r\n    border-color: #eeeeee;\r\n    border-style: dashed;\r\n    background-color: #fafafa;\r\n    color: #bdbdbd;\r\n    outline: none;\r\n    transition: border 0.24s ease-in-out;\r\n  }\r\n  .dropzone:focus {\r\n    border-color: #2196f3;\r\n  }\r\n</style>\r\n\r\n<div\r\n  bind:this={rootRef}\r\n  tabindex=\"0\"\r\n  class=\"{disableDefaultStyles ? '' : 'dropzone'}\r\n  {containerClasses}\"\r\n  style={containerStyles}\r\n  on:keydown={composeKeyboardHandler(onKeyDownCb)}\r\n  on:focus={composeKeyboardHandler(onFocusCb)}\r\n  on:blur={composeKeyboardHandler(onBlurCb)}\r\n  on:click={composeHandler(onClickCb)}\r\n  on:dragenter={composeDragHandler(onDragEnterCb)}\r\n  on:dragover={composeDragHandler(onDragOverCb)}\r\n  on:dragleave={composeDragHandler(onDragLeaveCb)}\r\n  on:drop={composeDragHandler(onDropCb)}>\r\n  <input\r\n    {accept}\r\n    {multiple}\r\n    type=\"file\"\r\n    autocomplete=\"off\"\r\n    tabindex=\"-1\"\r\n    on:change={onDropCb}\r\n    on:click={onInputElementClick}\r\n    bind:this={inputRef}\r\n    style=\"display: none;\" />\r\n  <slot>\r\n    <p>Drag 'n' drop some files here, or click to select files</p>\r\n  </slot>\r\n</div>\r\n",
    "<script>\n    import { notification } from '../store/notificationStore.js';\n    import {onMount,onDestroy} from 'svelte';\n    let count=0;\n    let toasts=[];\n    export let timeout=14000;\n    export let themes = {\n\t\tdanger: '#bb2124',\n\t\tsuccess: '#22bb33',\n\t\twarning: '#f0ad4e',\n\t\tinfo: '#5bc0de',\n\t\tdefault: '#aaaaaa'\n    }\n    function createToast(msg,theme,to) {\n        const background=themes[theme] || theme['default'];\n         toasts=[{\n            id:count,\n            msg, \n\t\t\tbackground, \n\t\t\ttimeout: to || timeout,\n\t\t\twidth: '100%'\n        },...toasts];\n        count=count+1;\n    }\n\n    function removeToast (id) { \n\t\ttoasts = toasts.filter(t => t.id != id)\n    };\n    function animateOut(node, { delay = 0, duration = 300 }) {\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration,\n\t\t\tcss: t => `opacity: ${(t-.5) * 1}; transform-origin: top right; transform: scaleX(${(t-.5)*1});`\n\t\t}\n    }\n\n$: if($notification) {\n    createToast($notification.message,$notification.type,$notification.timeout)\n}\n\n</script>\n\n\n\n<ul class=\"toasts\">\n        {#each toasts as toast (toast.id)}\n            <li class=\"toast\" style=\"background: {toast.background};\" out:animateOut>\n                <div class=\"content\">\n                    {toast.msg}\n                </div>\n                <div \n            class=\"progress\" \n            style=\"animation-duration: {toast.timeout}ms;\"\n            on:animationend={() => removeToast(toast.id) }>\n                </div>\n            </li>\t\n        {/each}\n    </ul>\n    <style>\n            :global(.toasts) {\n                list-style: none;\n                position: fixed;\n                top: 0;\n                right: 0;\n                padding: 0;\n                margin: 0;\n                z-index: 9999;\n            }\n            \n            :global(.toasts) > .toast {\n                position: relative;\n                margin: 10px;\n                width: 300px;\n                position: relative;\n                animation: animate-in 350ms forwards;\n                color: #fff;\n            }\n            \n            :global(.toasts) > .toast > .content {\n                padding: 10px;\n                display: block;\n                font-weight: 500;\n            }\n            \n            :global(.toasts) > .toast > .progress {\n                position: absolute;\n                bottom: 0;\n                background-color: rgb(0, 0, 0, 0.3);\n                height: 6px;\n            width: 100%;\n              animation-name: shrink;\n              animation-timing-function: linear;\n              animation-fill-mode: forwards;\n            }\n            \n            :global(.toasts) > .toast:before,\n            :global(.toasts) > .toast:after {\n                    content:\"\";\n                    position:absolute;\n                    z-index:-1;\n                    top:50%;\n                    bottom:0;\n                    left:10px;\n                    right:10px;\n                    border-radius:100px / 10px;\n            }\n            \n            :global(.toasts) > .toast:after {\n                    right:10px;\n                    left:auto;\n                    transform:skew(8deg) rotate(3deg);\n            }\n            \n            @keyframes animate-in { \n                0% { \n                    width: 0; \n                    opacity: 0; \n                    transform: scale(1.15) translateY(20px);\n                }\n                100% { \n                    width: 300px;\n                    opacity: 1; \n                    transform: scale(1) translateY(0);\n                }\n            }\n            \n            @keyframes shrink { \n                0% { \n                    width: 300px; \n                }\n                100% { \n                    width: 0; \n                }\n            }\n            \n        </style>",
    "<script>\n  import Textfield from \"@smui/textfield\";\n  import FileUpload from './FileUpload.svelte'\n  import Queries from '../Query/index.js';\n  import jwt_decode from 'jwt-decode';\n  import {getClient, mutate} from 'svelte-apollo';\n  import { danger, success } from \"../store/notificationStore.js\"\n\n  export let valueFullwidth = \"\";\n  export let currentChannel;\n  export let layout;\nconsole.log(\"currentChannel\",currentChannel);\n\n  const client=getClient();\n\n  const handleSendMessage = (e) => {\n      if(e.keyCode === 13) {\n        sendMessage(valueFullwidth);\n        valueFullwidth='';\n      }\n  };\n  const handleSendDirectMessage = (e) => {\n      if(e.keyCode === 13) {\n        sendDirectMessage(valueFullwidth);\n        valueFullwidth='';\n      }\n  };\n\n  const sendMessage=(sendvalue) =>{\n      console.log(currentChannel);\n       mutate(client,{\n                mutation:Queries.createMessage,\n                variables:{\n                    channelId:currentChannel.id,\n                    text: sendvalue\n                },\n            }).then((res)=>{\n                console.log(\"We got the data\",res);\n                const { ok }= res.data.createMessage;\n                if(ok) {\n                   console.log('Member added succesfully');\n                   const token=localStorage.getItem('token');\n                   const {user:{username}}=jwt_decode(token);\n                    success(`Message  sent successfully by ${username} `,10000);\n       \n                } else {\n                    danger(res.data.createMember.errors[0].message,10000);\n                } \n              \n            }).catch(error=>{\n                danger(\"Exception Occurred\",10000);\n            });\n        }\n\n        const sendDirectMessage=(sendvalue)=>{\n          console.log(\"sendDirectMessage\",currentChannel,sendvalue);\n          mutate(client,{\n                mutation:Queries.createuserTouserMessage,\n                variables:{\n                    receiverId:parseInt(currentChannel.id),\n                    text: sendvalue\n                },\n            }).then((res)=>{\n                console.log(\"We got the data\",res);\n                const { ok,message }= res.data.createuserTouserMessage;\n                if(ok) {\n                   const token=localStorage.getItem('token');\n                   const {user:{username}}=jwt_decode(token);\n                    success(`Message  sent successfully to ${message[0].receiverId} by ${username} `,10000);\n       \n                } else {\n                    danger(res.data.createuserTouserMessage.errors[0].message,10000);\n                } \n              \n            }).catch(error=>{\n              console.log(\"Error\",error)\n                danger(\"Exception Occurred\",10000);\n            });\n        }\n</script>\n\n<style>\n.FileUploadSection {\n    display: grid;\n    grid-template-columns: 3% 97%;\n}\n</style>\n\n<div class=\"input\">\n    <div class=\"FileUploadSection\">\n    <FileUpload containerClasses=\"spacingTopMedium\"/>\n    {#if layout== \"Teams\"}\n        <Textfield fullwidth lineRipple={false} bind:value={valueFullwidth} class=\"containerClasses\"\n        on:keyup={handleSendMessage} label={`#${currentChannel.name}`}\n        input$aria-controls=\"helper-text-fullwidth\"\n        input$aria-describedby=\"helper-text-fullwidth\" />\n        {:else}\n        <Textfield fullwidth lineRipple={false} bind:value={valueFullwidth} class=\"containerClasses\"\n        on:keyup={handleSendDirectMessage} label={`#${currentChannel.username}`}\n        input$aria-controls=\"helper-text-fullwidth\"\n        input$aria-describedby=\"helper-text-fullwidth\" />\n        {/if}\n    </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAiTE,SAAS,eAAC,CAAC,AACT,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,IAAI,CACb,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,GAAG,CAClB,YAAY,CAAE,OAAO,CACrB,YAAY,CAAE,MAAM,CACpB,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,CAAC,KAAK,CAAC,WAAW,AACtC,CAAC,AACD,wBAAS,MAAM,AAAC,CAAC,AACf,YAAY,CAAE,OAAO,AACvB,CAAC;ACvQiB,OAAO,AAAE,CAAC,AACd,UAAU,CAAE,IAAI,CAChB,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,CAAC,CACR,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,IAAI,AACjB,CAAC,8BAEO,OAAO,AAAC,CAAG,MAAM,8BAAC,CAAC,AACvB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,yBAAU,CAAC,KAAK,CAAC,QAAQ,CACpC,KAAK,CAAE,IAAI,AACf,CAAC,eAEO,OAAO,AAAC,CAAG,qBAAM,CAAG,QAAQ,eAAC,CAAC,AAClC,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,KAAK,CACd,WAAW,CAAE,GAAG,AACpB,CAAC,eAEO,OAAO,AAAC,CAAG,qBAAM,CAAG,SAAS,eAAC,CAAC,AACnC,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,gBAAgB,CAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACnC,MAAM,CAAE,GAAG,CACf,KAAK,CAAE,IAAI,CACT,cAAc,CAAE,qBAAM,CACtB,yBAAyB,CAAE,MAAM,CACjC,mBAAmB,CAAE,QAAQ,AAC/B,CAAC,8BAEO,OAAO,AAAC,CAAG,oCAAM,OAAO,+BACxB,OAAO,AAAC,CAAG,oCAAM,MAAM,AAAC,CAAC,AACzB,QAAQ,EAAE,CACV,SAAS,QAAQ,CACjB,QAAQ,EAAE,CACV,IAAI,GAAG,CACP,OAAO,CAAC,CACR,KAAK,IAAI,CACT,MAAM,IAAI,CACV,cAAc,KAAK,CAAC,CAAC,CAAC,IAAI,AAClC,CAAC,8BAEO,OAAO,AAAC,CAAG,oCAAM,MAAM,AAAC,CAAC,AACzB,MAAM,IAAI,CACV,KAAK,IAAI,CACT,UAAU,KAAK,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,AACzC,CAAC,AAED,WAAW,yBAAW,CAAC,AACnB,EAAE,AAAC,CAAC,AACA,KAAK,CAAE,CAAC,CACR,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,MAAM,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,AAC3C,CAAC,AACD,IAAI,AAAC,CAAC,AACF,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,AACrC,CAAC,AACL,CAAC,AAED,WAAW,qBAAO,CAAC,AACf,EAAE,AAAC,CAAC,AACA,KAAK,CAAE,KAAK,AAChB,CAAC,AACD,IAAI,AAAC,CAAC,AACF,KAAK,CAAE,CAAC,AACZ,CAAC,AACL,CAAC;ACnDb,kBAAkB,cAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,EAAE,CAAC,GAAG,AACjC,CAAC"
}